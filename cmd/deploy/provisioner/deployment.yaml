# This YAML file demonstrates how to deploy the external
# provisioner for use with the mock CSI driver. It
# depends on the RBAC definitions from rbac.yaml.

kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-provisioner
  namespace: riocsi
spec:
  replicas: 3
  selector:
    matchLabels:
      external-provisioner: csi-provisioner
  template:
    metadata:
      labels:
        external-provisioner: csi-provisioner
    spec:
      # debug only(connect to dlv 2345 port)
      #hostNetwork: true
      serviceAccountName: csi-provisioner
      containers:
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            - "--leader-election"
            - "--extra-create-metadata=true"
            - "--enable-capacity=true"
            - "--default-fstype=ext4"
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/csi/sockets/rio/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/rio
        - name: rio-csi
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          image: docker.qiniu.io:32500/rio-csi:latest
          args:
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--enable-identity-server"
            - "--enable-controller-server"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/rio/csi.sock
            - name: RIO_CSI_NAMESPACE
              value: riocsi
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/rio
      volumes:
        - name: socket-dir
          emptyDir: {}

