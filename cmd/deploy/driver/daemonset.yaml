# This YAML file contains driver-registrar & csi driver nodeplugin API objects
# that are necessary to run CSI nodeplugin for nfs

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-driver-registrar
  namespace: riocsi
spec:
  selector:
    matchLabels:
      app: csi-driver-registrar
  template:
    metadata:
      labels:
        app: csi-driver-registrar
    spec:
      # debug only(connect to dlv 2345 port)
      #hostNetwork: true
      serviceAccount: riocsi-node-sa
      hostNetwork: true
      hostPID: true
      containers:
        - name: csi-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
          args:
            - "--v=5"
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--kubelet-registration-path=/var/lib/kubelet/plugins/rio-csi/csi.sock"
          env:
            - name: CSI_ENDPOINT
              value: /csi/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: rio-csi
          image: docker.qiniu.io:32500/rio-csi:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          lifecycle:
            preStop:
              exec:
                command: ["bash","-c","rm -rf /registration/rio-csi /registration/rio-csi-reg.sock"]
          args :
            - "--nodeid=$(NODE_ID)"
            - "--name=rio-csi"
            - "--version=v1.0"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--driverType=node"
            - "--iscsiUsername=rio-csi"
            - "--iscsiPasswd=rio-123"
            - "--driverType=node"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: RIO_CSI_NAMESPACE
              value: riocsi
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /dev
            - name: registration-dir
              mountPath: /registration
            # nfs ci driver will create a shared mount point in this directory
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
      volumes:
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/rio-csi
            type: DirectoryOrCreate
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        # rio csi driver will create a shared mount point in this directory
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
---

########################################
###########                 ############
###########   Node plugin   ############
###########                 ############
########################################

apiVersion: v1
kind: ServiceAccount
metadata:
  name: riocsi-node-sa
  namespace: riocsi

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: riocsi-driver-registrar-role
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumes", "nodes", "services"]
    verbs: ["get", "list"]
  - apiGroups: ["rio.qiniu.io"]
    resources: ["volumes", "volumes/status", "snapshots", "nodes"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: riocsi-driver-registrar-binding
subjects:
  - kind: ServiceAccount
    name: riocsi-node-sa
    namespace: riocsi
roleRef:
  kind: ClusterRole
  name: riocsi-driver-registrar-role
  apiGroup: rbac.authorization.k8s.io

---
